diff --git .settings/org.eclipse.core.resources.prefs .settings/org.eclipse.core.resources.prefs
deleted file mode 100755
index 610aa57..0000000 100755
--- .settings/org.eclipse.core.resources.prefs
+++ /dev/null
@@ -1,3 +0,0 @@
-#Sat Sep 26 10:11:15 BST 2009
-eclipse.preferences.version=1
-encoding/<project>=UTF-8
diff --git jbehave-odf/src/main/java/org/jbehave/core/io/odf/LoadOdtFromGoogle.java jbehave-odf/src/main/java/org/jbehave/core/io/odf/LoadOdtFromGoogle.java
index 05ab5af..4bc648a 100644
--- jbehave-odf/src/main/java/org/jbehave/core/io/odf/LoadOdtFromGoogle.java
+++ jbehave-odf/src/main/java/org/jbehave/core/io/odf/LoadOdtFromGoogle.java
@@ -6,6 +6,7 @@
 import java.net.URL;
 import java.util.List;
 
+import com.google.gdata.client.DocumentQuery;
 import com.google.gdata.client.docs.DocsService;
 import com.google.gdata.data.MediaContent;
 import com.google.gdata.data.docs.DocumentListEntry;
@@ -16,6 +17,7 @@
 
 public class LoadOdtFromGoogle extends LoadOdtFromURL {
 	
+	private static final String FEED_URI = "https://docs.google.com/feeds/default/private/full/";
 	private final DocsService client;
 
 	public LoadOdtFromGoogle(String username, String password) {
@@ -36,17 +38,16 @@
 	}
 
     private String exportURL(String title) throws IOException, ServiceException, MalformedURLException {
-        URL documentURL = documentURL(title);
-        List<DocumentListEntry> entries = client.getFeed(documentURL, DocumentListFeed.class).getEntries();
+    	DocumentQuery query = new DocumentQuery(new URL(FEED_URI));
+    	query.setTitleQuery(title);
+    	query.setTitleExact(true);
+    	query.setMaxResults(1);
+        List<DocumentListEntry> entries = client.getFeed(query, DocumentListFeed.class).getEntries();
         if ( entries.isEmpty() ){
-            throw new GoogleDocumentNotFound(documentURL);
+            throw new GoogleDocumentNotFound(title);
         }
         return ((MediaContent) entries.get(0).getContent()).getUri() + "&exportFormat=odt";
     }
-
-	protected URL documentURL(String title) throws MalformedURLException {
-		return new URL("https://docs.google.com/feeds/default/private/full/-/document?title=" + title);
-	}
 
     private InputStream documentAsStream(String url) throws IOException, MalformedURLException {
         try {
@@ -72,8 +73,8 @@
     @SuppressWarnings("serial")
     public static class GoogleDocumentNotFound extends RuntimeException {
 
-        public GoogleDocumentNotFound(URL url) {
-            super("Failed to find Google document from "+url);
+        public GoogleDocumentNotFound(String title) {
+            super("Failed to find Google document with title "+title);
         }
         
     }

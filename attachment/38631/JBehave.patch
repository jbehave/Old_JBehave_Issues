# This patch file was generated by NetBeans IDE
# Following Index: paths are relative to: C:\workspace\jbehave\jbehave-core
# This patch can be applied using context Tools: Patch action on respective folder.
# It uses platform neutral UTF-8 encoding and \n newlines.
# Above lines and this line are ignored by the patching process.
Index: src/behaviour/DefaultPackageScenario.java
--- src/behaviour/DefaultPackageScenario.java Locally New
+++ src/behaviour/DefaultPackageScenario.java Locally New
@@ -0,0 +1,6 @@
+
+import org.jbehave.scenario.JUnitScenario;
+
+public class DefaultPackageScenario extends JUnitScenario {
+    
+}
Index: src/behaviour/UnderscoredCamelCaseResolverBehaviour.java
--- src/behaviour/UnderscoredCamelCaseResolverBehaviour.java Locally New
+++ src/behaviour/UnderscoredCamelCaseResolverBehaviour.java Locally New
@@ -0,0 +1,15 @@
+
+import org.jbehave.scenario.parser.UnderscoredCamelCaseResolver;
+import static org.hamcrest.CoreMatchers.equalTo;
+import static org.jbehave.Ensure.ensureThat;
+
+import org.junit.Test;
+
+public class UnderscoredCamelCaseResolverBehaviour {
+    @Test
+    public void shouldResolveCamelCasedClassNameInDefaultPackage() {
+        UnderscoredCamelCaseResolver resolver = new UnderscoredCamelCaseResolver();
+        ensureThat(resolver.resolve(DefaultPackageScenario.class),
+                equalTo("/default_package_scenario"));
+    }
+}
Index: src/java/org/jbehave/scenario/parser/UnderscoredCamelCaseResolver.java
--- src/java/org/jbehave/scenario/parser/UnderscoredCamelCaseResolver.java Base (BASE)
+++ src/java/org/jbehave/scenario/parser/UnderscoredCamelCaseResolver.java Locally Modified (Based On LOCAL)
@@ -34,7 +34,10 @@
     }
 
     public String resolve(Class<? extends RunnableScenario> scenarioClass) {
-        String packageDir = scenarioClass.getPackage().getName().replaceAll(DOT_REGEX, SLASH);
+        String packageDir = "";
+        if(scenarioClass.getPackage() != null){
+            packageDir = scenarioClass.getPackage().getName().replaceAll(DOT_REGEX, SLASH);
+        } 
         Matcher matcher = Pattern.compile(PATTERN).matcher(scenarioClass.getSimpleName());
         int startAt = 0;
         StringBuilder builder = new StringBuilder();

    @Test
	public void shouldMatchCompositStepsWhenStepParamterIsProvided(){
		CompositeStepParamterMatching steps = new CompositeStepParamterMatching();
        List<StepCandidate> candidates = steps.listCandidates();
        StepCandidate candidate = candidates.get(0);
        assertThat(candidate.isComposite(), is(true));
        Map<String, String> noNamedParameters = new HashMap<String, String>();
        List<Step> composedSteps = new ArrayList<Step>();
        candidate.addComposedSteps(composedSteps, "When I login", noNamedParameters, candidates);
        assertThat(composedSteps.size(), equalTo(1));
        for (Step step : composedSteps) {
            step.perform(null);
        }
        assertThat(steps.button, equalTo("Login"));
	}
	
	static class CompositeStepParamterMatching extends Steps {
		private String button;
		

		@When("I login")
		@Composite(steps={"When I click the Login button"})
		public void whenILogin(){}
		
		@When("I click the $button button")
		public void whenIClickTheButton(@Named("button") String button){
			this.button = button;
		}
		
	}